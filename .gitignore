# -------------------------------------
# ðŸ›  macOS System Files
# -------------------------------------
.DS_Store
.AppleDouble
.LSOverride
# Git Submodules
**/.git/

# Ignore log and debugging files
*.log
*.bak
*.bk
debug.log
*.rs.bk

# Ignore system files
.Trashes
.fseventsd
Spotlight-V100

# Ignore Homebrew & system-wide cargo artifacts
/usr/local/Cellar/
/usr/local/lib/
/usr/local/include/


# -------------------------------------
# ðŸ›  Xcode
# -------------------------------------
## User settings
xcuserdata/
*.xccheckout
*.xcscmblueprint
*.xcuserstate
*.pbxuser
*.mode1v3
*.mode2v3
*.swp
*.xcuserdatad/

## Derived Data & Caches
DerivedData/
.build/
*.swiftpm/
*.hmap

# Allow tracking of project.pbxproj and Package.resolved
!RadicleApp.xcodeproj/project.pbxproj
!RadicleApp.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved

# Still ignore other SwiftPM files
!RadicleApp.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/

## App Packaging
*.ipa
*.dSYM
*.dSYM.zip

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# -------------------------------------
# ðŸ›  Swift Package Manager
# -------------------------------------
Packages/
Package.pins

# -------------------------------------
# ðŸ›  CocoaPods
# -------------------------------------
Pods/

# -------------------------------------
# ðŸ›  Carthage
# -------------------------------------
Carthage/Build/
Carthage/Checkouts

# -------------------------------------
# ðŸ›  fastlane
# -------------------------------------
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# -------------------------------------
# ðŸ¦€ Rust (Heartwood)
# -------------------------------------
## Ignore Rust build artifacts
RustCore/Heartwood/target/
RustCore/ios-bridge/target/
RustCore/ios-bridge/build/
RustCore/ios-bridge/Cargo.lock
RustCore/ios-bridge/build/ios/
RustCore/ios-bridge/build/ios/Heartwood.xcframework/
RustCore/ios-bridge/build/ios/libheartwood_ios_bridge_sim.a
RustCore/ios-bridge/build/ios/Heartwood.xcframework/**/*.a

## Cargo
Cargo.lock
.cargo/
.cargo-targets

## Rust Debugging & Logs
debug.log
*.rs.bk


# Ignore compiled Rust libraries
*.a
*.dylib
*.so
*.o
*.rlib

# Ignore Xcode build artifacts
DerivedData/
*.xcuserdatad/

# -------------------------------------
# ðŸš€ XCFramework (Generated Binaries)
# -------------------------------------
# Ignore Xcode's build directories
*.xcbuild/
*.xcframework/
*.xcarchive/

# Ignore device-specific output folders
RustCore/ios-bridge/build/ios/Heartwood.xcframework/ios-arm64
RustCore/ios-bridge/build/ios/Heartwood.xcframework/ios-arm64_x86_64-simulator
RustCore/Heartwood/ios-bridge/build/ios/Heartwood.xcframework/
